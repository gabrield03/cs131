1. Execute the command find /etc -type f > one.txt 2> two.txt
   a. The command searches for all files within the /etc directory and subdirectories. It outputs the list of files to one.txt.
      The 2> part of the command redirects any standard error output that occurs due to the find command to the file two.txt.
   b. The one.txt file has a list of files from the /etc directory and subdirectories.
      two.txt contains a list of files that were the standard error output from the find command. They were files that I did not have
      permission to access. Additionally, on each line, it shows the command that generated the error output (find).

Terminal output (when using the cat command to view the one.txt and two.txt files):
one.txt:
   /etc/fstab
   /etc/crypttab
   /etc/multipath.conf
   /etc/multipath/wwids
   /etc/multipath/bindings
   /etc/resolv.conf
   ...
two.txt:
   find: ‘/etc/pki/rsyslog’: Permission denied
   find: ‘/etc/lvm/archive’: Permission denied
   find: ‘/etc/lvm/backup’: Permission denied
   find: ‘/etc/lvm/cache’: Permission denied
   find: ‘/etc/sssd’: Permission denied
   ...

2. Which [Month, Year] had the most YouTube channels created? Explain your command
   As per the DataSet, the top [Month, Year] with the most number of YouTube channels created was:
      1. March,2006 with 15 channels
*** Additional info, the top three are: (showing the top 3 because thats the example used in the assignment on Canvas)
      1. March,2006 with 15 channels
      2. July,2014 with 13 channels
      3. August,2014 with 12 channels
Explanation:
   The command I used was: cut -d ',' -f20,21 | sort -t ',' -k1,1n | uniq -c | sort -k1,1nr | head -n 3 > ~/ClonedRepos/cs131/Assignment2/top3ChannelsByDate.txt
   cut is used to remove sections lines in a file. The -d is the delimiter (commas), -f is the field, so -f20 is the 20th field (year)
   and -f21 is the 21st field (month). The format to link them is -f20,21. I then sorted that output as the input for my sort 1st sort.
   "sort" is used to sort lines of a text file. "-t" is used as the delimiter (commas). 
   "-k" is used as the key and tells the sort command to sort by the first field (year). "-n" sorts numerically.
   Then I used "uniq -c" to report/count the number of repeated lines. 
   I sorted this output again, numerically by the first entry and in reverse order with -r. The first entry on each line was
   the count from the uniq command. I then used "head -n 3" to display the top 3 lines which were the highest counts of 
   the month and year of created YouTube channels. Finally, I redirected the output to the the file, top3ChannelsByDate.txt.
   (Creating the file was not a required step but I included it anyway to show my output).

Terminal output (when using the cat command to view the file, top3ChannelsByDate.txt, generated by the command):
     15 2006,Mar
     13 2014,Jul
     12 2014,Aug

3. Write the command you would use to find all the processes owned by you. Paste the output of the same.
   ps -u $USER

Terminal output:
    PID TTY          TIME CMD
1361671 ?        00:00:01 systemd
1361673 ?        00:00:00 (sd-pam)
1361679 ?        00:00:00 sshd
1361680 pts/2    00:00:00 bash
1528954 pts/2    00:00:00 ps

4. 
   a. Open two terminals and execute vi file.txt in one terminal. Do not quit or close the vi prompt screen.
   b. Use the command from Q3 in a second terminal and paste the output. What did you notice? What is the PID for the vim?
Terminal output:
    PID TTY          TIME CMD
1361671 ?        00:00:01 systemd
1361673 ?        00:00:00 (sd-pam)
1361679 ?        00:00:00 sshd
1361680 pts/2    00:00:00 bash
1528954 pts/2    00:00:00 tmux: client
1534088 ?        00:00:00 tmux: sever
1534089 pts/94   00:00:00 bash
1534723 pts/101  00:00:00 bash
1535566 pts/94   00:00:00 vim
1536196 pts/101  00:00:00 ps

I noticed that there are a few more processes running that are owned by me. I used tmux to create two sessions on the IBM VM - they
are listed there. The vim is also shown on the second terminal. The vim process is not just isolated to the single terminal that 
executed the vi file.txt command. The PID for the vim is: 1535566.

   c. Quit the vi on the first terminal. 
   d. Use the command from Q3 in the second terminal and paste the output. What did you notice? What changed and why?
    PID TTY          TIME CMD
1361671 ?        00:00:01 systemd
1361673 ?        00:00:00 (sd-pam)
1361679 ?        00:00:00 sshd
1361680 pts/2    00:00:00 bash
1528954 pts/2    00:00:00 tmux: client
1534088 ?        00:00:00 tmux: sever
1534089 pts/94   00:00:00 bash
1534723 pts/101  00:00:00 bash
1538870 pts/101  00:00:00 ps

The vim is no longer listed. This happened because the process was ended and I no longer have ownership of the vim/it was removed.
Additionally, the ps command that I ran on the first terminal is a new ps command. The PID is different, so it is a different
process.

5. What is the init process in Linux? Find the PID for the init process. Show the command used.
   The init process in Linux is the first process that gets run when the system boots. It initializes the system, hence the name.
   It also is responsible for creating processes and runs until the system is shut down.
   The command I used was: pgrep -x systemd
   I expected the command to result in just one line, with a PID of 1. However, the output was interesting:
   1
   13840
   23207
   28563
   29653
   ...
   There were many more lines associated with the systemd process. I used the -x option to match processes whose names exactly match.

6. Explain the ps -aux command in 4 sentences or less.
   The ps command itself is used to show current processes on the system. It shows their PID, owner, memory usage, and more.
   aux are options to show every process on the system.
